                      Chess Server and Android Application
                      ====================================
* Importing to Eclipse:
  + File->Import...
  + Choose 'Existing Maven Project'.
  + Set the directory containing the entire project as Root-Directory.
  + Click 'Finish'.
  After importing the project, Eclipse may mark some build and project
  configuration problems. These issues are caused by Eclipse not understanding
  that the top-level project 'Chess' does not contain source code and can be
  safely ignored.

* Running using Eclipse:
  + Running the server:
    - Create a new Tomcat-7 server using Eclipse.
    - Run the 'Server' project on the Tomcat-7 server.
    The server exposes the Chess service at http://<host>:8080/Server/chess/.
  + Running the Android Application:
    - Run the 'AndroidApp' project on an Android device (or a simulator).
  + Running the command line client:
    It is not recommended to run the command line application directly from
    eclipse, as it is interactive command line program. Please see further
    instructions in the 'Exporting and running indipendently' section.

* Exporting and running indipendently:
  + Exporting the server:
    - Right-click the 'Server' project.
    - Choose Export->WAR file.
    - Fill in a destination file name in the 'Destination' field.
    - Click 'Finish'.
    After exporting the server WAR, it can be deployed on a tomcat server.
  + Exporting the Android Application:
    - Right-click the 'AndroidApp' project.
    - Choose 'Export...'.
    - Choose 'Export Android Application'.
    - Follow the instructions in the Export Android Application wizard.
    After exporting the Android application APK file, it can be installed on
    Android devices.
  + Running the command line client:
    - Export the 'Shell' project as a 'Runnable JAR file'.
    - From the command line, run: java -jar /<path-to-jar>/shell.jar
    The 'Shell' project is configured to include all dependencies in the
    exported jar. Due to this, the jar is a bit big, but does not need any
    classpath or other configuration in order to run.
